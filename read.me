Assumptions:
I can just publish the entries to some RabbitMQ exchange
I will for simplicity just use h2 as the database (can easily be changed)
I will skip implementation of integration and component tests and just focus on unit tests.
(I did the integration tests manually instead).


Process:
1) Create spring boot app
2) Implement REST API + tests 
3) Store log entries in database (h2)
4) Publish log entries to RabbitMQ exchange
5) Implement load tests (maybe using JMeter or threads)
6) Based on load tests maybe change implementation to be async

I was able to do a quick  load test of the application using JMeter, 
but I wasn't sure how to include it, so I have excluded the test from github repository.
However, the test shows that the performance of the application can probably be improved 
if we do the processing of the requests asynchronously and use worker threads to do this work.
This would improve the scalability of the application.

Note on how to run RabbitMQ server locally (using docker):
docker run -it --rm --name rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:3.11-management

Credentials: 
 user: guest
 password: guest